// МИКСИНЫ И ФУНКЦИИ

// ========= Перевод пикселей в ремы (функция) ======== //

// Функция возвращает размер шрифта в rem (переводит из пикселей в rem). По умолчанию в браузерах это 16px. В стилях для конкретного текста можно писать font-size: rem(32); Это пример. Тогда в файле css окажется 2rem. 16px - это размер по умолчанию в браузерах. $pxSize пишем без 'px'.

@function rem($pxSize) {
	$remSize: calc($pxSize / 16 * 1rem);
	@return $remSize;
}

// ========= Адаптивное свойство в пикселях с clamp ======== //

// Функция ниже возвращает формулу, по которой рассчитывается адаптивное свойство. Но в пикселях. Параметры у функции - это минимальное и максимальное значения свойства. Атрибуты указываются без пикселей.

@function proad($min, $max) {
	@return clamp(
		rem($min),
		calc($min * 1px + ($max - $min) * ((100vw - $minWidth) / (($maxWidth - $minWidth) / (1px)))),
		rem($max)
	);
}

// ========= Адаптивное свойство в ремах с clamp ======== //

// $min и $max - минимальное и максимальное значение свойства (например, размера шрифта) в пикселях, но пиксели не пишутся. В функции они будут переведены в ремы.
// $minWidthRemWithout и $maxWidthRemWithout - это максимальная и минимальная ширины экрана, в пределах которых изменяется адаптивное свойство. На минимальной ширине свойство будет равно $min, на максимальной - $max. Сюда помещяем переменные, в которых значения брейкпойнтов в ремах, но без указания ремов (то есть не 2.5rem, а просто 2.5)

@function proadrem($min, $max, $minWidthRemWithout, $maxWidthRemWithout) {
	@return clamp(
		rem($min),
		calc(
			rem($min) + (($max - $min) / 16) *
				((100vw - $minWidthRemWithout * 1rem) / ($maxWidthRemWithout - $minWidthRemWithout))
		),
		rem($max)
	);
}
